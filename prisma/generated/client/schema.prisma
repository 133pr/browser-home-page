generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

// datasource db {
//   provider  = "postgresql"
//   url       = "postgresql://production_owner:jNrUV15bYfct@ep-cool-grass-a1ehbfky-pooler.ap-southeast-1.aws.neon.tech/production?sslmode=require"
//   directUrl = "postgresql://production_owner:jNrUV15bYfct@ep-cool-grass-a1ehbfky.ap-southeast-1.aws.neon.tech/production?sslmode=require"
// }

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?
  email          String?   @unique
  emailVerified  DateTime? @map(name: "email_verified")
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now()) @map(name: "created_at")
  updatedAt      DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Favorites {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  icon      String
  title     String
  url       String
  order     Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "favorits")
}

model Passed {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map(name: "user_id")
  date      DateTime @default(now())
  icon      String
  title     String?
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "passed")
}

model Settings {
  id        Int      @id @default(autoincrement())
  userId    Int      @map(name: "user_id")
  title     String
  value     String
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "settings")
}
